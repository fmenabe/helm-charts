# Default values for outline.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: outlinewiki/outline
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

startupProbe:
  failureThreshold: 30
  httpGet:
    path: /
    port: http
  periodSeconds: 10
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  type: local

  local:
    #storageClass:
    accessMode:
    size:
    mountPath:

  s3:
    url:
    accessKey:
    secretKey:
    region:
    bucket: my-bucket
    forcePathStyle: true
    acl: private

host: chart-example.local

outline:
  nodeEnv: production
  secretKey: "!CHANGEME!"
  # openssl rand -hex 32
  utilsSecret: "!CHANGEME!"
  # openssl rand -hex 32
  databaseConnectionPoolMin: 2
  databaseConnectionPoolMax: 20
  pgsslMode: "disable"
  uploadMaxSize: 262144000
  importMaxSize: 262144000
  workspaceImportMaxSize: 262144000
  forceHttps: false
  enableUpdates: false
  debug: http
  logLevel: info
  webConcurrency: 4

  oidc:
    enabled: false
    clientId:
    clientSecret:
    authUri:
    tokenUri:
    userinfoUri:
    logoutUri:
    usernameClaim: preferred_username
    displayName: OpenID Connect
    scopes: openid profile email

  smtp:
    enabled: false
    host:
    port:
    username:
    password:
    fromEmail:
    replyEmail:
    secure:

ingress:
  enabled: false
  className: ""
  pathType: ImplementationSpecific
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    enabled: true
    secretName:  chart-example-tls
